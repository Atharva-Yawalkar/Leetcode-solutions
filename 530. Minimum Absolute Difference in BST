/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, vector<int> &inorderT){
        if(root==NULL) return;

        inorder(root->left, inorderT);
        inorderT.push_back(root->val);
        inorder(root->right, inorderT);
    }
    int getMinimumDifference(TreeNode* root) {
        vector<int> inorderT;
        int min_diff=INT_MAX;
        inorder(root, inorderT);
        for(int i=0;i+1<inorderT.size();i++){
            int diff=inorderT[i+1]-inorderT[i];
            min_diff=min(min_diff, diff);
        }
        return min_diff;
    }
};
