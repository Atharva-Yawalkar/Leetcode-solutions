class Solution {
public:

    int firstOcc(vector<int> &arr, int k){
        int s=0, e=arr.size()-1;
        int mid = s+(e-s)/2;
        int ans=-1;
        while(s<=e){
            if(arr[mid]==k){
                ans=mid;
                e=mid-1;
            }
            else if(arr[mid]>k){
                e=mid-1;
            }
            else {
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }

    int lastOcc(vector<int> &arr, int k){
        int s=0, e=arr.size()-1;
        int mid = s+(e-s)/2;
        int ans=-1;
        while(s<=e){
            if(arr[mid]==k){
                ans=mid;
                s=mid+1;
            }
            else if(arr[mid]>k){
                e=mid-1;
            }
            else {
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }

    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> a;
        a.push_back(firstOcc(nums, target));
        a.push_back(lastOcc(nums, target));

        return a;
    }
};
